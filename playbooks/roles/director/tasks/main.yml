---
# tasks file for roles/rhosp_director
- name: set hostname
  hostname:
    name: "{{ director_hostname }}.{{ domain }}"
  tags: prep

- name: add line to hosts file for self
  lineinfile:
    dest: /etc/hosts
    state: present
    regexp: "^{{ inventory_hostname }}"
    line: "{{ director_public_ip }} {{ director_hostname }}.{{ domain }} {{ director_hostname }}"
  tags: prep

- sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  tags: prep

- name: add stack user and set password
  user:
    name: stack
    password: "{{ director_stack_user_pwd }}"
  tags: prep

- name: allow stack user to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^stack'
    line: 'stack ALL=(ALL) NOPASSWD:ALL'
  tags: prep

- name: turn off requiretty for sudo
  lineinfile:
    dest: /etc/sudoers
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
     - { line: "Defaults !requiretty", state: present }
     - { line: "Defaults requiretty", state: absent }
  tags: prep

- name: check sudoers
  shell: cat /etc/sudoers | grep tty
  register: sudoers_output
  tags: prep

- name: install several useful utility and undercloud packages
  yum:
    name: "{{ director_packages }}"
    state: latest
  tags: prep

- name: install ceph ansible if RHOSP 12+
  yum:
    name: "ceph-ansible"
    state: latest
  when: versions.rhosp >= 12
  tags: prep

- name: update packages
  yum:
    name: '*'
    state: latest
  register: yum_result
  async: 1000
  poll: 30
  tags: prep

- name: check Kernel is the Latest
  shell: if [ $(uname -r) == $(rpm -q kernel | tail -n 1 | sed -e 's/kernel-//g') ] ; then echo no ; else echo reboot; fi
  ignore_errors: true
  register: reboot_hint
  tags: prep

- name: restart undercloud machine to get updated kernel
  shell: sleep 2 && shutdown -r now "Ansible restart triggered for RHOSP Director install"
  async: 1
  poll: 0
  ignore_errors: true
  when: yum_result.changed or reboot_hint.stdout.find("reboot") != -1
  tags: prep

- name: waiting for Server to come back
  wait_for:
    host: "{{ director_public_ip }}"
    state: started
    delay: 10
    connect_timeout: 5
    timeout: 300
    port: 22
  delegate_to: 127.0.0.1
  become: false
  ignore_errors: true
  tags: prep

- name: setting provisioning interface onboot=no
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ director_provisioning_interface }}
    state: present
    regexp: '^ONBOOT'
    line: 'ONBOOT=no'
  tags: prep

- name: copy undercloud.conf template
  become: yes
  become_user: stack
  copy:
    src: /usr/share/instack-undercloud/undercloud.conf.sample
    dest: /home/stack/undercloud.conf
    remote_src: true
    owner: stack
    group: stack
    mode: 0664
  tags: install

- name: set undercloud.conf variables in the default section
  ini_file:
    dest: /home/stack/undercloud.conf
    section: DEFAULT
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    mode: 0644
    backup: no
  with_items:
    - { key: image_path, value: "/home/stack/images" }
    - { key: undercloud_hostname, value: "{{ director_hostname }}.{{ domain }}" }
    - { key: overcloud_domain_name, value: "{{ director_cloud_domain }}" }
    - { key: local_ip, value: "{{ director_provisioning_ip }}" }
    - { key: local_interface, value: "{{ director_provisioning_interface }}" }
    - { key: local_mtu, value: "{{ director_provisioning_interface_mtu }}" }
    - { key: undercloud_public_vip, value: "{{ director_public_ip }}" }
    - { key: undercloud_public_host, value: "{{ director_public_ip }}" }
    - { key: undercloud_admin_vip, value: "{{ director_admin_apis_vip }}" }
    - { key: undercloud_admin_host, value: "{{ director_admin_apis_vip }}" }
    - { key: generate_service_certificate, value: "{{ director_generate_service_certificate | default('true') }}" }
    - { key: certificate_generation_ca, value: "local" }
    - { key: undercloud_service_certificate, value: ""}
    - { key: service_principal, value: ""}
    - { key: network_cidr, value: "{{ director_provisioning_network_cidr }}" }
    - { key: network_gateway, value: "{{ director_provisioning_network_gateway }}" }
    - { key: masquerade_network, value: "{{ director_provisioning_network_cidr }}" }
    - { key: dhcp_start, value: "{{ director_deploy_dhcp_start }}" }
    - { key: dhcp_end, value: "{{ director_deploy_dhcp_end }}" }
    - { key: inspection_interface, value: "br-ctlplane"}
    - { key: inspection_iprange, value: "{{ director_inspection_dhcp_start }},{{ director_inspection_dhcp_end }}" }
    - { key: inspection_runbench, value: "false"}
    - { key: inspection_enable_uefi, value: "true"}
    - { key: undercloud_debug, value: "false"}
    - { key: enable_tempest, value: "true"}
    - { key: enable_validations, value: "true"}
    - { key: enable_mistral, value: "true"}
    - { key: enable_zaqar, value: "true"}
    - { key: enable_telemetry, value: "true"}
    - { key: enable_ui, value: "true"}
    - { key: ipxe_enabled, value: "true"}
    - { key: store_events, value: "true" }
    - { key: clean_nodes, value: "{{ director_clean_nodes }}"}
    - { key: undercloud_name_servers, value: "{{ dns_server_local }}"}
    - { key: undercloud_ntp_servers, value: "{{ director_ntp_servers }}"}
  tags: install

- name: set undercloud.conf variables in the auth section
  ini_file:
    dest: /home/stack/undercloud.conf
    option: undercloud_admin_password
    section: auth
    value: "{{ director_admin_password }}"
    mode: 0644
    backup: no
  tags: install

- name: set undercloud.conf variables in the ctlplane section
  ini_file:
    dest: /home/stack/undercloud.conf
    section: ctlplane-subnet
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    mode: 0644
    backup: no
  with_items:
    - { key: cidr, value: "{{ director_provisioning_network_cidr }}" }
    - { key: dhcp_start, value: "{{ director_deploy_dhcp_start }}" }
    - { key: dhcp_end, value: "{{ director_deploy_dhcp_end }}" }
    - { key: inspection_iprange, value: "{{ director_inspection_dhcp_start }},{{ director_inspection_dhcp_end }}" }
    - { key: gateway, value: "{{ director_provisioning_network_gateway }}" }
    - { key: masquerade, value: "true"}
  when: versions.rhosp == 13
  tags: install

- name: make images and templates directories
  become: yes
  become_user: stack
  file:
    path: "/home/stack/{{ item }}"
    state: directory
    mode: 0755
    owner: stack
    group: stack
  with_items:
    - 'images'
    - 'templates'
  tags: install

- name: unpacking overcloud and ironic images
  become: yes
  become_user: stack
  unarchive:
    src: "{{ item }}"
    remote_src: true
    dest: /home/stack/images
  with_items:
    - '/usr/share/rhosp-director-images/overcloud-full-latest-{{ versions.rhosp }}.0.tar'
    - '/usr/share/rhosp-director-images/ironic-python-agent-latest-{{ versions.rhosp }}.0.tar'
  tags: install

- name: install the Undercloud
  become: yes
  become_user: stack
  shell: openstack undercloud install
  args:
    chdir: /home/stack
  async: 2700
  poll: 30
  tags: install
